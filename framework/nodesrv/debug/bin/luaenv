
--环境的初始化

local root_path = os.getenv('NEOX_DIR')
if not root_path then
    print('please set env NEOX_DIR')
    print('run commands:')
    print('echo "export NEOX_DIR=`pwd`" >> ~/.bashrc')
    print('source ~/.bashrc')
    os.exit(0)
end


require('config')

if not Config.proc_dir then
    Config.proc_dir = string.format('%s/proc', root_path)
end
if not Config.asset_dir then
    Config.asset_dir = string.format('%s/asset', root_path)
end
if not File.exists(Config.proc_dir) then
    File.mkdirs(Config.proc_dir)
end

package.path = string.format('%s;%s/?.lua', package.path, root_path)
package.path = string.format('%s;%s/?.lua', package.path, Config.asset_dir)

loginfo = function(format, ...) Log.info(string.format('[%s]'..format, _NAME or '', ...)) end
logwarn = function(format, ...) Log.info(string.format('[%s]'..format, _NAME or '', ...)) end
logerr = function(format, ...) Log.info(string.format('[%s]'..format, _NAME or '', ...)) end
logmsg = function(format, ...) Log.msg(string.format('[%s]'..format, _NAME or '', ...)) end
logdebug = function(format, ...) Log.debug(string.format('[%s]'..format, _NAME or '', ...)) end

local _require = require
require = function(filepath) 
    if package.loaded[filepath] then
        package.loaded[filepath] = nil
        loginfo('reload script %s', filepath)
    else
        loginfo('load script %s', filepath)
    end
     _require(filepath)
end

--print('Config = ')
--print(Json.encode(Config))
