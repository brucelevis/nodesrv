// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: unityframe.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "unityframe.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace unity {

namespace {

const ::google::protobuf::Descriptor* Vector3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Vector3_reflection_ = NULL;
const ::google::protobuf::Descriptor* RorateAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RorateAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScaleAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScaleAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoveAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoveAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestroyAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* InstantiateAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InstantiateAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayAnimAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayAnimAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* StopAnimAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StopAnimAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* FRAME_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FRAME_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_unityframe_2eproto() {
  protobuf_AddDesc_unityframe_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "unityframe.proto");
  GOOGLE_CHECK(file != NULL);
  Vector3_descriptor_ = file->message_type(0);
  static const int Vector3_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector3, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector3, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector3, z_),
  };
  Vector3_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Vector3_descriptor_,
      Vector3::default_instance_,
      Vector3_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector3, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector3, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Vector3));
  RorateAction_descriptor_ = file->message_type(1);
  static const int RorateAction_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RorateAction, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RorateAction, src_rorate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RorateAction, dst_rorate_),
  };
  RorateAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RorateAction_descriptor_,
      RorateAction::default_instance_,
      RorateAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RorateAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RorateAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RorateAction));
  ScaleAction_descriptor_ = file->message_type(2);
  static const int ScaleAction_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScaleAction, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScaleAction, src_scale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScaleAction, dst_scale_),
  };
  ScaleAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ScaleAction_descriptor_,
      ScaleAction::default_instance_,
      ScaleAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScaleAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScaleAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ScaleAction));
  MoveAction_descriptor_ = file->message_type(3);
  static const int MoveAction_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveAction, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveAction, src_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveAction, dst_position_),
  };
  MoveAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MoveAction_descriptor_,
      MoveAction::default_instance_,
      MoveAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MoveAction));
  DestroyAction_descriptor_ = file->message_type(4);
  static const int DestroyAction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyAction, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyAction, delay_),
  };
  DestroyAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DestroyAction_descriptor_,
      DestroyAction::default_instance_,
      DestroyAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DestroyAction));
  InstantiateAction_descriptor_ = file->message_type(5);
  static const int InstantiateAction_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstantiateAction, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstantiateAction, prefab_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstantiateAction, objname_),
  };
  InstantiateAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InstantiateAction_descriptor_,
      InstantiateAction::default_instance_,
      InstantiateAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstantiateAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstantiateAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InstantiateAction));
  PlayAnimAction_descriptor_ = file->message_type(6);
  static const int PlayAnimAction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayAnimAction, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayAnimAction, animname_),
  };
  PlayAnimAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlayAnimAction_descriptor_,
      PlayAnimAction::default_instance_,
      PlayAnimAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayAnimAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayAnimAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlayAnimAction));
  StopAnimAction_descriptor_ = file->message_type(7);
  static const int StopAnimAction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopAnimAction, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopAnimAction, animname_),
  };
  StopAnimAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StopAnimAction_descriptor_,
      StopAnimAction::default_instance_,
      StopAnimAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopAnimAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopAnimAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StopAnimAction));
  FRAME_descriptor_ = file->message_type(8);
  static const int FRAME_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRAME, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRAME, detal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRAME, move_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRAME, instantiate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRAME, destroy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRAME, scale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRAME, rorate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRAME, play_anim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRAME, stop_anim_),
  };
  FRAME_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FRAME_descriptor_,
      FRAME::default_instance_,
      FRAME_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRAME, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRAME, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FRAME));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_unityframe_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Vector3_descriptor_, &Vector3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RorateAction_descriptor_, &RorateAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ScaleAction_descriptor_, &ScaleAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MoveAction_descriptor_, &MoveAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DestroyAction_descriptor_, &DestroyAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InstantiateAction_descriptor_, &InstantiateAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlayAnimAction_descriptor_, &PlayAnimAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StopAnimAction_descriptor_, &StopAnimAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FRAME_descriptor_, &FRAME::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_unityframe_2eproto() {
  delete Vector3::default_instance_;
  delete Vector3_reflection_;
  delete RorateAction::default_instance_;
  delete RorateAction_reflection_;
  delete ScaleAction::default_instance_;
  delete ScaleAction_reflection_;
  delete MoveAction::default_instance_;
  delete MoveAction_reflection_;
  delete DestroyAction::default_instance_;
  delete DestroyAction_reflection_;
  delete InstantiateAction::default_instance_;
  delete InstantiateAction_reflection_;
  delete PlayAnimAction::default_instance_;
  delete PlayAnimAction_reflection_;
  delete StopAnimAction::default_instance_;
  delete StopAnimAction_reflection_;
  delete FRAME::default_instance_;
  delete FRAME_reflection_;
}

void protobuf_AddDesc_unityframe_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020unityframe.proto\022\005unity\"3\n\007Vector3\022\014\n\001"
    "x\030\001 \001(\002:\0010\022\014\n\001y\030\002 \001(\002:\0010\022\014\n\001z\030\003 \001(\002:\0010\"k"
    "\n\014RorateAction\022\023\n\010objectid\030\001 \001(\005:\0010\022\"\n\ns"
    "rc_rorate\030\002 \001(\0132\016.unity.Vector3\022\"\n\ndst_r"
    "orate\030\003 \001(\0132\016.unity.Vector3\"h\n\013ScaleActi"
    "on\022\023\n\010objectid\030\001 \001(\005:\0010\022!\n\tsrc_scale\030\002 \001"
    "(\0132\016.unity.Vector3\022!\n\tdst_scale\030\003 \001(\0132\016."
    "unity.Vector3\"m\n\nMoveAction\022\023\n\010objectid\030"
    "\001 \001(\005:\0010\022$\n\014src_position\030\002 \001(\0132\016.unity.V"
    "ector3\022$\n\014dst_position\030\003 \001(\0132\016.unity.Vec"
    "tor3\"6\n\rDestroyAction\022\023\n\010objectid\030\001 \001(\005:"
    "\0010\022\020\n\005delay\030\002 \001(\005:\0010\"I\n\021InstantiateActio"
    "n\022\023\n\010objectid\030\001 \001(\005:\0010\022\016\n\006prefab\030\002 \001(\t\022\017"
    "\n\007objname\030\003 \001(\t\"7\n\016PlayAnimAction\022\023\n\010obj"
    "ectid\030\001 \001(\005:\0010\022\020\n\010animname\030\002 \001(\t\"7\n\016Stop"
    "AnimAction\022\023\n\010objectid\030\001 \001(\005:\0010\022\020\n\010animn"
    "ame\030\002 \001(\t\"\276\002\n\005FRAME\022\020\n\005frame\030\001 \001(\005:\0010\022\020\n"
    "\005detal\030\002 \001(\005:\0010\022\037\n\004move\030\003 \003(\0132\021.unity.Mo"
    "veAction\022-\n\013instantiate\030\004 \003(\0132\030.unity.In"
    "stantiateAction\022%\n\007destroy\030\005 \003(\0132\024.unity"
    ".DestroyAction\022!\n\005scale\030\006 \003(\0132\022.unity.Sc"
    "aleAction\022#\n\006rorate\030\007 \003(\0132\023.unity.Rorate"
    "Action\022(\n\tplay_anim\030\010 \003(\0132\025.unity.PlayAn"
    "imAction\022(\n\tstop_anim\030\t \003(\0132\025.unity.Stop"
    "AnimAction", 970);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "unityframe.proto", &protobuf_RegisterTypes);
  Vector3::default_instance_ = new Vector3();
  RorateAction::default_instance_ = new RorateAction();
  ScaleAction::default_instance_ = new ScaleAction();
  MoveAction::default_instance_ = new MoveAction();
  DestroyAction::default_instance_ = new DestroyAction();
  InstantiateAction::default_instance_ = new InstantiateAction();
  PlayAnimAction::default_instance_ = new PlayAnimAction();
  StopAnimAction::default_instance_ = new StopAnimAction();
  FRAME::default_instance_ = new FRAME();
  Vector3::default_instance_->InitAsDefaultInstance();
  RorateAction::default_instance_->InitAsDefaultInstance();
  ScaleAction::default_instance_->InitAsDefaultInstance();
  MoveAction::default_instance_->InitAsDefaultInstance();
  DestroyAction::default_instance_->InitAsDefaultInstance();
  InstantiateAction::default_instance_->InitAsDefaultInstance();
  PlayAnimAction::default_instance_->InitAsDefaultInstance();
  StopAnimAction::default_instance_->InitAsDefaultInstance();
  FRAME::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_unityframe_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_unityframe_2eproto {
  StaticDescriptorInitializer_unityframe_2eproto() {
    protobuf_AddDesc_unityframe_2eproto();
  }
} static_descriptor_initializer_unityframe_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Vector3::kXFieldNumber;
const int Vector3::kYFieldNumber;
const int Vector3::kZFieldNumber;
#endif  // !_MSC_VER

Vector3::Vector3()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:unity.Vector3)
}

void Vector3::InitAsDefaultInstance() {
}

Vector3::Vector3(const Vector3& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:unity.Vector3)
}

void Vector3::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Vector3::~Vector3() {
  // @@protoc_insertion_point(destructor:unity.Vector3)
  SharedDtor();
}

void Vector3::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Vector3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Vector3_descriptor_;
}

const Vector3& Vector3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_unityframe_2eproto();
  return *default_instance_;
}

Vector3* Vector3::default_instance_ = NULL;

Vector3* Vector3::New() const {
  return new Vector3;
}

void Vector3::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Vector3*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, z_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Vector3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:unity.Vector3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1 [default = 0];
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // optional float y = 2 [default = 0];
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // optional float z = 3 [default = 0];
      case 3: {
        if (tag == 29) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:unity.Vector3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:unity.Vector3)
  return false;
#undef DO_
}

void Vector3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:unity.Vector3)
  // optional float x = 1 [default = 0];
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2 [default = 0];
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3 [default = 0];
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:unity.Vector3)
}

::google::protobuf::uint8* Vector3::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:unity.Vector3)
  // optional float x = 1 [default = 0];
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2 [default = 0];
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3 [default = 0];
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unity.Vector3)
  return target;
}

int Vector3::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional float x = 1 [default = 0];
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 2 [default = 0];
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float z = 3 [default = 0];
    if (has_z()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector3::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Vector3* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Vector3*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Vector3::MergeFrom(const Vector3& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Vector3::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3::CopyFrom(const Vector3& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3::IsInitialized() const {

  return true;
}

void Vector3::Swap(Vector3* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Vector3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Vector3_descriptor_;
  metadata.reflection = Vector3_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RorateAction::kObjectidFieldNumber;
const int RorateAction::kSrcRorateFieldNumber;
const int RorateAction::kDstRorateFieldNumber;
#endif  // !_MSC_VER

RorateAction::RorateAction()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:unity.RorateAction)
}

void RorateAction::InitAsDefaultInstance() {
  src_rorate_ = const_cast< ::unity::Vector3*>(&::unity::Vector3::default_instance());
  dst_rorate_ = const_cast< ::unity::Vector3*>(&::unity::Vector3::default_instance());
}

RorateAction::RorateAction(const RorateAction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:unity.RorateAction)
}

void RorateAction::SharedCtor() {
  _cached_size_ = 0;
  objectid_ = 0;
  src_rorate_ = NULL;
  dst_rorate_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RorateAction::~RorateAction() {
  // @@protoc_insertion_point(destructor:unity.RorateAction)
  SharedDtor();
}

void RorateAction::SharedDtor() {
  if (this != default_instance_) {
    delete src_rorate_;
    delete dst_rorate_;
  }
}

void RorateAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RorateAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RorateAction_descriptor_;
}

const RorateAction& RorateAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_unityframe_2eproto();
  return *default_instance_;
}

RorateAction* RorateAction::default_instance_ = NULL;

RorateAction* RorateAction::New() const {
  return new RorateAction;
}

void RorateAction::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    objectid_ = 0;
    if (has_src_rorate()) {
      if (src_rorate_ != NULL) src_rorate_->::unity::Vector3::Clear();
    }
    if (has_dst_rorate()) {
      if (dst_rorate_ != NULL) dst_rorate_->::unity::Vector3::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RorateAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:unity.RorateAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 objectid = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_src_rorate;
        break;
      }

      // optional .unity.Vector3 src_rorate = 2;
      case 2: {
        if (tag == 18) {
         parse_src_rorate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_src_rorate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dst_rorate;
        break;
      }

      // optional .unity.Vector3 dst_rorate = 3;
      case 3: {
        if (tag == 26) {
         parse_dst_rorate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dst_rorate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:unity.RorateAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:unity.RorateAction)
  return false;
#undef DO_
}

void RorateAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:unity.RorateAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectid(), output);
  }

  // optional .unity.Vector3 src_rorate = 2;
  if (has_src_rorate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->src_rorate(), output);
  }

  // optional .unity.Vector3 dst_rorate = 3;
  if (has_dst_rorate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dst_rorate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:unity.RorateAction)
}

::google::protobuf::uint8* RorateAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:unity.RorateAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectid(), target);
  }

  // optional .unity.Vector3 src_rorate = 2;
  if (has_src_rorate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->src_rorate(), target);
  }

  // optional .unity.Vector3 dst_rorate = 3;
  if (has_dst_rorate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dst_rorate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unity.RorateAction)
  return target;
}

int RorateAction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 objectid = 1 [default = 0];
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional .unity.Vector3 src_rorate = 2;
    if (has_src_rorate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->src_rorate());
    }

    // optional .unity.Vector3 dst_rorate = 3;
    if (has_dst_rorate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dst_rorate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RorateAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RorateAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RorateAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RorateAction::MergeFrom(const RorateAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_src_rorate()) {
      mutable_src_rorate()->::unity::Vector3::MergeFrom(from.src_rorate());
    }
    if (from.has_dst_rorate()) {
      mutable_dst_rorate()->::unity::Vector3::MergeFrom(from.dst_rorate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RorateAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RorateAction::CopyFrom(const RorateAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RorateAction::IsInitialized() const {

  return true;
}

void RorateAction::Swap(RorateAction* other) {
  if (other != this) {
    std::swap(objectid_, other->objectid_);
    std::swap(src_rorate_, other->src_rorate_);
    std::swap(dst_rorate_, other->dst_rorate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RorateAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RorateAction_descriptor_;
  metadata.reflection = RorateAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ScaleAction::kObjectidFieldNumber;
const int ScaleAction::kSrcScaleFieldNumber;
const int ScaleAction::kDstScaleFieldNumber;
#endif  // !_MSC_VER

ScaleAction::ScaleAction()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:unity.ScaleAction)
}

void ScaleAction::InitAsDefaultInstance() {
  src_scale_ = const_cast< ::unity::Vector3*>(&::unity::Vector3::default_instance());
  dst_scale_ = const_cast< ::unity::Vector3*>(&::unity::Vector3::default_instance());
}

ScaleAction::ScaleAction(const ScaleAction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:unity.ScaleAction)
}

void ScaleAction::SharedCtor() {
  _cached_size_ = 0;
  objectid_ = 0;
  src_scale_ = NULL;
  dst_scale_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScaleAction::~ScaleAction() {
  // @@protoc_insertion_point(destructor:unity.ScaleAction)
  SharedDtor();
}

void ScaleAction::SharedDtor() {
  if (this != default_instance_) {
    delete src_scale_;
    delete dst_scale_;
  }
}

void ScaleAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScaleAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScaleAction_descriptor_;
}

const ScaleAction& ScaleAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_unityframe_2eproto();
  return *default_instance_;
}

ScaleAction* ScaleAction::default_instance_ = NULL;

ScaleAction* ScaleAction::New() const {
  return new ScaleAction;
}

void ScaleAction::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    objectid_ = 0;
    if (has_src_scale()) {
      if (src_scale_ != NULL) src_scale_->::unity::Vector3::Clear();
    }
    if (has_dst_scale()) {
      if (dst_scale_ != NULL) dst_scale_->::unity::Vector3::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ScaleAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:unity.ScaleAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 objectid = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_src_scale;
        break;
      }

      // optional .unity.Vector3 src_scale = 2;
      case 2: {
        if (tag == 18) {
         parse_src_scale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_src_scale()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dst_scale;
        break;
      }

      // optional .unity.Vector3 dst_scale = 3;
      case 3: {
        if (tag == 26) {
         parse_dst_scale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dst_scale()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:unity.ScaleAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:unity.ScaleAction)
  return false;
#undef DO_
}

void ScaleAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:unity.ScaleAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectid(), output);
  }

  // optional .unity.Vector3 src_scale = 2;
  if (has_src_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->src_scale(), output);
  }

  // optional .unity.Vector3 dst_scale = 3;
  if (has_dst_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dst_scale(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:unity.ScaleAction)
}

::google::protobuf::uint8* ScaleAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:unity.ScaleAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectid(), target);
  }

  // optional .unity.Vector3 src_scale = 2;
  if (has_src_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->src_scale(), target);
  }

  // optional .unity.Vector3 dst_scale = 3;
  if (has_dst_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dst_scale(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unity.ScaleAction)
  return target;
}

int ScaleAction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 objectid = 1 [default = 0];
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional .unity.Vector3 src_scale = 2;
    if (has_src_scale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->src_scale());
    }

    // optional .unity.Vector3 dst_scale = 3;
    if (has_dst_scale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dst_scale());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScaleAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ScaleAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ScaleAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ScaleAction::MergeFrom(const ScaleAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_src_scale()) {
      mutable_src_scale()->::unity::Vector3::MergeFrom(from.src_scale());
    }
    if (from.has_dst_scale()) {
      mutable_dst_scale()->::unity::Vector3::MergeFrom(from.dst_scale());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ScaleAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScaleAction::CopyFrom(const ScaleAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScaleAction::IsInitialized() const {

  return true;
}

void ScaleAction::Swap(ScaleAction* other) {
  if (other != this) {
    std::swap(objectid_, other->objectid_);
    std::swap(src_scale_, other->src_scale_);
    std::swap(dst_scale_, other->dst_scale_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ScaleAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScaleAction_descriptor_;
  metadata.reflection = ScaleAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MoveAction::kObjectidFieldNumber;
const int MoveAction::kSrcPositionFieldNumber;
const int MoveAction::kDstPositionFieldNumber;
#endif  // !_MSC_VER

MoveAction::MoveAction()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:unity.MoveAction)
}

void MoveAction::InitAsDefaultInstance() {
  src_position_ = const_cast< ::unity::Vector3*>(&::unity::Vector3::default_instance());
  dst_position_ = const_cast< ::unity::Vector3*>(&::unity::Vector3::default_instance());
}

MoveAction::MoveAction(const MoveAction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:unity.MoveAction)
}

void MoveAction::SharedCtor() {
  _cached_size_ = 0;
  objectid_ = 0;
  src_position_ = NULL;
  dst_position_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MoveAction::~MoveAction() {
  // @@protoc_insertion_point(destructor:unity.MoveAction)
  SharedDtor();
}

void MoveAction::SharedDtor() {
  if (this != default_instance_) {
    delete src_position_;
    delete dst_position_;
  }
}

void MoveAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoveAction_descriptor_;
}

const MoveAction& MoveAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_unityframe_2eproto();
  return *default_instance_;
}

MoveAction* MoveAction::default_instance_ = NULL;

MoveAction* MoveAction::New() const {
  return new MoveAction;
}

void MoveAction::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    objectid_ = 0;
    if (has_src_position()) {
      if (src_position_ != NULL) src_position_->::unity::Vector3::Clear();
    }
    if (has_dst_position()) {
      if (dst_position_ != NULL) dst_position_->::unity::Vector3::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MoveAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:unity.MoveAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 objectid = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_src_position;
        break;
      }

      // optional .unity.Vector3 src_position = 2;
      case 2: {
        if (tag == 18) {
         parse_src_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_src_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dst_position;
        break;
      }

      // optional .unity.Vector3 dst_position = 3;
      case 3: {
        if (tag == 26) {
         parse_dst_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dst_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:unity.MoveAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:unity.MoveAction)
  return false;
#undef DO_
}

void MoveAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:unity.MoveAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectid(), output);
  }

  // optional .unity.Vector3 src_position = 2;
  if (has_src_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->src_position(), output);
  }

  // optional .unity.Vector3 dst_position = 3;
  if (has_dst_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dst_position(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:unity.MoveAction)
}

::google::protobuf::uint8* MoveAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:unity.MoveAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectid(), target);
  }

  // optional .unity.Vector3 src_position = 2;
  if (has_src_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->src_position(), target);
  }

  // optional .unity.Vector3 dst_position = 3;
  if (has_dst_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dst_position(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unity.MoveAction)
  return target;
}

int MoveAction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 objectid = 1 [default = 0];
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional .unity.Vector3 src_position = 2;
    if (has_src_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->src_position());
    }

    // optional .unity.Vector3 dst_position = 3;
    if (has_dst_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dst_position());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MoveAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MoveAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MoveAction::MergeFrom(const MoveAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_src_position()) {
      mutable_src_position()->::unity::Vector3::MergeFrom(from.src_position());
    }
    if (from.has_dst_position()) {
      mutable_dst_position()->::unity::Vector3::MergeFrom(from.dst_position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MoveAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveAction::CopyFrom(const MoveAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveAction::IsInitialized() const {

  return true;
}

void MoveAction::Swap(MoveAction* other) {
  if (other != this) {
    std::swap(objectid_, other->objectid_);
    std::swap(src_position_, other->src_position_);
    std::swap(dst_position_, other->dst_position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MoveAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoveAction_descriptor_;
  metadata.reflection = MoveAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DestroyAction::kObjectidFieldNumber;
const int DestroyAction::kDelayFieldNumber;
#endif  // !_MSC_VER

DestroyAction::DestroyAction()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:unity.DestroyAction)
}

void DestroyAction::InitAsDefaultInstance() {
}

DestroyAction::DestroyAction(const DestroyAction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:unity.DestroyAction)
}

void DestroyAction::SharedCtor() {
  _cached_size_ = 0;
  objectid_ = 0;
  delay_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DestroyAction::~DestroyAction() {
  // @@protoc_insertion_point(destructor:unity.DestroyAction)
  SharedDtor();
}

void DestroyAction::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DestroyAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyAction_descriptor_;
}

const DestroyAction& DestroyAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_unityframe_2eproto();
  return *default_instance_;
}

DestroyAction* DestroyAction::default_instance_ = NULL;

DestroyAction* DestroyAction::New() const {
  return new DestroyAction;
}

void DestroyAction::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DestroyAction*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(objectid_, delay_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DestroyAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:unity.DestroyAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 objectid = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_delay;
        break;
      }

      // optional int32 delay = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_delay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delay_)));
          set_has_delay();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:unity.DestroyAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:unity.DestroyAction)
  return false;
#undef DO_
}

void DestroyAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:unity.DestroyAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectid(), output);
  }

  // optional int32 delay = 2 [default = 0];
  if (has_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delay(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:unity.DestroyAction)
}

::google::protobuf::uint8* DestroyAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:unity.DestroyAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectid(), target);
  }

  // optional int32 delay = 2 [default = 0];
  if (has_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delay(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unity.DestroyAction)
  return target;
}

int DestroyAction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 objectid = 1 [default = 0];
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional int32 delay = 2 [default = 0];
    if (has_delay()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delay());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestroyAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DestroyAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DestroyAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DestroyAction::MergeFrom(const DestroyAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_delay()) {
      set_delay(from.delay());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DestroyAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestroyAction::CopyFrom(const DestroyAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyAction::IsInitialized() const {

  return true;
}

void DestroyAction::Swap(DestroyAction* other) {
  if (other != this) {
    std::swap(objectid_, other->objectid_);
    std::swap(delay_, other->delay_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DestroyAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyAction_descriptor_;
  metadata.reflection = DestroyAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InstantiateAction::kObjectidFieldNumber;
const int InstantiateAction::kPrefabFieldNumber;
const int InstantiateAction::kObjnameFieldNumber;
#endif  // !_MSC_VER

InstantiateAction::InstantiateAction()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:unity.InstantiateAction)
}

void InstantiateAction::InitAsDefaultInstance() {
}

InstantiateAction::InstantiateAction(const InstantiateAction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:unity.InstantiateAction)
}

void InstantiateAction::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  objectid_ = 0;
  prefab_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InstantiateAction::~InstantiateAction() {
  // @@protoc_insertion_point(destructor:unity.InstantiateAction)
  SharedDtor();
}

void InstantiateAction::SharedDtor() {
  if (prefab_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete prefab_;
  }
  if (objname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete objname_;
  }
  if (this != default_instance_) {
  }
}

void InstantiateAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InstantiateAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InstantiateAction_descriptor_;
}

const InstantiateAction& InstantiateAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_unityframe_2eproto();
  return *default_instance_;
}

InstantiateAction* InstantiateAction::default_instance_ = NULL;

InstantiateAction* InstantiateAction::New() const {
  return new InstantiateAction;
}

void InstantiateAction::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    objectid_ = 0;
    if (has_prefab()) {
      if (prefab_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        prefab_->clear();
      }
    }
    if (has_objname()) {
      if (objname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        objname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InstantiateAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:unity.InstantiateAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 objectid = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prefab;
        break;
      }

      // optional string prefab = 2;
      case 2: {
        if (tag == 18) {
         parse_prefab:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prefab()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->prefab().data(), this->prefab().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "prefab");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_objname;
        break;
      }

      // optional string objname = 3;
      case 3: {
        if (tag == 26) {
         parse_objname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_objname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->objname().data(), this->objname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "objname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:unity.InstantiateAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:unity.InstantiateAction)
  return false;
#undef DO_
}

void InstantiateAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:unity.InstantiateAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectid(), output);
  }

  // optional string prefab = 2;
  if (has_prefab()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prefab().data(), this->prefab().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "prefab");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->prefab(), output);
  }

  // optional string objname = 3;
  if (has_objname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->objname().data(), this->objname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "objname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->objname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:unity.InstantiateAction)
}

::google::protobuf::uint8* InstantiateAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:unity.InstantiateAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectid(), target);
  }

  // optional string prefab = 2;
  if (has_prefab()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prefab().data(), this->prefab().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "prefab");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->prefab(), target);
  }

  // optional string objname = 3;
  if (has_objname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->objname().data(), this->objname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "objname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->objname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unity.InstantiateAction)
  return target;
}

int InstantiateAction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 objectid = 1 [default = 0];
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional string prefab = 2;
    if (has_prefab()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prefab());
    }

    // optional string objname = 3;
    if (has_objname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->objname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InstantiateAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InstantiateAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InstantiateAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InstantiateAction::MergeFrom(const InstantiateAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_prefab()) {
      set_prefab(from.prefab());
    }
    if (from.has_objname()) {
      set_objname(from.objname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InstantiateAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstantiateAction::CopyFrom(const InstantiateAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstantiateAction::IsInitialized() const {

  return true;
}

void InstantiateAction::Swap(InstantiateAction* other) {
  if (other != this) {
    std::swap(objectid_, other->objectid_);
    std::swap(prefab_, other->prefab_);
    std::swap(objname_, other->objname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InstantiateAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InstantiateAction_descriptor_;
  metadata.reflection = InstantiateAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PlayAnimAction::kObjectidFieldNumber;
const int PlayAnimAction::kAnimnameFieldNumber;
#endif  // !_MSC_VER

PlayAnimAction::PlayAnimAction()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:unity.PlayAnimAction)
}

void PlayAnimAction::InitAsDefaultInstance() {
}

PlayAnimAction::PlayAnimAction(const PlayAnimAction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:unity.PlayAnimAction)
}

void PlayAnimAction::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  objectid_ = 0;
  animname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayAnimAction::~PlayAnimAction() {
  // @@protoc_insertion_point(destructor:unity.PlayAnimAction)
  SharedDtor();
}

void PlayAnimAction::SharedDtor() {
  if (animname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete animname_;
  }
  if (this != default_instance_) {
  }
}

void PlayAnimAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayAnimAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayAnimAction_descriptor_;
}

const PlayAnimAction& PlayAnimAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_unityframe_2eproto();
  return *default_instance_;
}

PlayAnimAction* PlayAnimAction::default_instance_ = NULL;

PlayAnimAction* PlayAnimAction::New() const {
  return new PlayAnimAction;
}

void PlayAnimAction::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    objectid_ = 0;
    if (has_animname()) {
      if (animname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        animname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlayAnimAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:unity.PlayAnimAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 objectid = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_animname;
        break;
      }

      // optional string animname = 2;
      case 2: {
        if (tag == 18) {
         parse_animname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_animname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->animname().data(), this->animname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "animname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:unity.PlayAnimAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:unity.PlayAnimAction)
  return false;
#undef DO_
}

void PlayAnimAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:unity.PlayAnimAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectid(), output);
  }

  // optional string animname = 2;
  if (has_animname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->animname().data(), this->animname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "animname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->animname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:unity.PlayAnimAction)
}

::google::protobuf::uint8* PlayAnimAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:unity.PlayAnimAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectid(), target);
  }

  // optional string animname = 2;
  if (has_animname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->animname().data(), this->animname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "animname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->animname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unity.PlayAnimAction)
  return target;
}

int PlayAnimAction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 objectid = 1 [default = 0];
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional string animname = 2;
    if (has_animname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->animname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayAnimAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlayAnimAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlayAnimAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlayAnimAction::MergeFrom(const PlayAnimAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_animname()) {
      set_animname(from.animname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlayAnimAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayAnimAction::CopyFrom(const PlayAnimAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayAnimAction::IsInitialized() const {

  return true;
}

void PlayAnimAction::Swap(PlayAnimAction* other) {
  if (other != this) {
    std::swap(objectid_, other->objectid_);
    std::swap(animname_, other->animname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlayAnimAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayAnimAction_descriptor_;
  metadata.reflection = PlayAnimAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StopAnimAction::kObjectidFieldNumber;
const int StopAnimAction::kAnimnameFieldNumber;
#endif  // !_MSC_VER

StopAnimAction::StopAnimAction()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:unity.StopAnimAction)
}

void StopAnimAction::InitAsDefaultInstance() {
}

StopAnimAction::StopAnimAction(const StopAnimAction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:unity.StopAnimAction)
}

void StopAnimAction::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  objectid_ = 0;
  animname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StopAnimAction::~StopAnimAction() {
  // @@protoc_insertion_point(destructor:unity.StopAnimAction)
  SharedDtor();
}

void StopAnimAction::SharedDtor() {
  if (animname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete animname_;
  }
  if (this != default_instance_) {
  }
}

void StopAnimAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopAnimAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StopAnimAction_descriptor_;
}

const StopAnimAction& StopAnimAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_unityframe_2eproto();
  return *default_instance_;
}

StopAnimAction* StopAnimAction::default_instance_ = NULL;

StopAnimAction* StopAnimAction::New() const {
  return new StopAnimAction;
}

void StopAnimAction::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    objectid_ = 0;
    if (has_animname()) {
      if (animname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        animname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StopAnimAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:unity.StopAnimAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 objectid = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_animname;
        break;
      }

      // optional string animname = 2;
      case 2: {
        if (tag == 18) {
         parse_animname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_animname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->animname().data(), this->animname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "animname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:unity.StopAnimAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:unity.StopAnimAction)
  return false;
#undef DO_
}

void StopAnimAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:unity.StopAnimAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectid(), output);
  }

  // optional string animname = 2;
  if (has_animname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->animname().data(), this->animname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "animname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->animname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:unity.StopAnimAction)
}

::google::protobuf::uint8* StopAnimAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:unity.StopAnimAction)
  // optional int32 objectid = 1 [default = 0];
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectid(), target);
  }

  // optional string animname = 2;
  if (has_animname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->animname().data(), this->animname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "animname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->animname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unity.StopAnimAction)
  return target;
}

int StopAnimAction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 objectid = 1 [default = 0];
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional string animname = 2;
    if (has_animname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->animname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopAnimAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StopAnimAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StopAnimAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StopAnimAction::MergeFrom(const StopAnimAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_animname()) {
      set_animname(from.animname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StopAnimAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopAnimAction::CopyFrom(const StopAnimAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopAnimAction::IsInitialized() const {

  return true;
}

void StopAnimAction::Swap(StopAnimAction* other) {
  if (other != this) {
    std::swap(objectid_, other->objectid_);
    std::swap(animname_, other->animname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StopAnimAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StopAnimAction_descriptor_;
  metadata.reflection = StopAnimAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FRAME::kFrameFieldNumber;
const int FRAME::kDetalFieldNumber;
const int FRAME::kMoveFieldNumber;
const int FRAME::kInstantiateFieldNumber;
const int FRAME::kDestroyFieldNumber;
const int FRAME::kScaleFieldNumber;
const int FRAME::kRorateFieldNumber;
const int FRAME::kPlayAnimFieldNumber;
const int FRAME::kStopAnimFieldNumber;
#endif  // !_MSC_VER

FRAME::FRAME()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:unity.FRAME)
}

void FRAME::InitAsDefaultInstance() {
}

FRAME::FRAME(const FRAME& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:unity.FRAME)
}

void FRAME::SharedCtor() {
  _cached_size_ = 0;
  frame_ = 0;
  detal_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FRAME::~FRAME() {
  // @@protoc_insertion_point(destructor:unity.FRAME)
  SharedDtor();
}

void FRAME::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FRAME::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FRAME::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FRAME_descriptor_;
}

const FRAME& FRAME::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_unityframe_2eproto();
  return *default_instance_;
}

FRAME* FRAME::default_instance_ = NULL;

FRAME* FRAME::New() const {
  return new FRAME;
}

void FRAME::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FRAME*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(frame_, detal_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  move_.Clear();
  instantiate_.Clear();
  destroy_.Clear();
  scale_.Clear();
  rorate_.Clear();
  play_anim_.Clear();
  stop_anim_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FRAME::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:unity.FRAME)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 frame = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));
          set_has_frame();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_detal;
        break;
      }

      // optional int32 detal = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_detal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &detal_)));
          set_has_detal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_move;
        break;
      }

      // repeated .unity.MoveAction move = 3;
      case 3: {
        if (tag == 26) {
         parse_move:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_move()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_move;
        if (input->ExpectTag(34)) goto parse_instantiate;
        break;
      }

      // repeated .unity.InstantiateAction instantiate = 4;
      case 4: {
        if (tag == 34) {
         parse_instantiate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_instantiate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_instantiate;
        if (input->ExpectTag(42)) goto parse_destroy;
        break;
      }

      // repeated .unity.DestroyAction destroy = 5;
      case 5: {
        if (tag == 42) {
         parse_destroy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_destroy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_destroy;
        if (input->ExpectTag(50)) goto parse_scale;
        break;
      }

      // repeated .unity.ScaleAction scale = 6;
      case 6: {
        if (tag == 50) {
         parse_scale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scale()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_scale;
        if (input->ExpectTag(58)) goto parse_rorate;
        break;
      }

      // repeated .unity.RorateAction rorate = 7;
      case 7: {
        if (tag == 58) {
         parse_rorate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rorate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_rorate;
        if (input->ExpectTag(66)) goto parse_play_anim;
        break;
      }

      // repeated .unity.PlayAnimAction play_anim = 8;
      case 8: {
        if (tag == 66) {
         parse_play_anim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_play_anim()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_play_anim;
        if (input->ExpectTag(74)) goto parse_stop_anim;
        break;
      }

      // repeated .unity.StopAnimAction stop_anim = 9;
      case 9: {
        if (tag == 74) {
         parse_stop_anim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stop_anim()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_stop_anim;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:unity.FRAME)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:unity.FRAME)
  return false;
#undef DO_
}

void FRAME::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:unity.FRAME)
  // optional int32 frame = 1 [default = 0];
  if (has_frame()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frame(), output);
  }

  // optional int32 detal = 2 [default = 0];
  if (has_detal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->detal(), output);
  }

  // repeated .unity.MoveAction move = 3;
  for (int i = 0; i < this->move_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->move(i), output);
  }

  // repeated .unity.InstantiateAction instantiate = 4;
  for (int i = 0; i < this->instantiate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->instantiate(i), output);
  }

  // repeated .unity.DestroyAction destroy = 5;
  for (int i = 0; i < this->destroy_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->destroy(i), output);
  }

  // repeated .unity.ScaleAction scale = 6;
  for (int i = 0; i < this->scale_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->scale(i), output);
  }

  // repeated .unity.RorateAction rorate = 7;
  for (int i = 0; i < this->rorate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->rorate(i), output);
  }

  // repeated .unity.PlayAnimAction play_anim = 8;
  for (int i = 0; i < this->play_anim_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->play_anim(i), output);
  }

  // repeated .unity.StopAnimAction stop_anim = 9;
  for (int i = 0; i < this->stop_anim_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->stop_anim(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:unity.FRAME)
}

::google::protobuf::uint8* FRAME::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:unity.FRAME)
  // optional int32 frame = 1 [default = 0];
  if (has_frame()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frame(), target);
  }

  // optional int32 detal = 2 [default = 0];
  if (has_detal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->detal(), target);
  }

  // repeated .unity.MoveAction move = 3;
  for (int i = 0; i < this->move_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->move(i), target);
  }

  // repeated .unity.InstantiateAction instantiate = 4;
  for (int i = 0; i < this->instantiate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->instantiate(i), target);
  }

  // repeated .unity.DestroyAction destroy = 5;
  for (int i = 0; i < this->destroy_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->destroy(i), target);
  }

  // repeated .unity.ScaleAction scale = 6;
  for (int i = 0; i < this->scale_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->scale(i), target);
  }

  // repeated .unity.RorateAction rorate = 7;
  for (int i = 0; i < this->rorate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->rorate(i), target);
  }

  // repeated .unity.PlayAnimAction play_anim = 8;
  for (int i = 0; i < this->play_anim_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->play_anim(i), target);
  }

  // repeated .unity.StopAnimAction stop_anim = 9;
  for (int i = 0; i < this->stop_anim_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->stop_anim(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unity.FRAME)
  return target;
}

int FRAME::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 frame = 1 [default = 0];
    if (has_frame()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frame());
    }

    // optional int32 detal = 2 [default = 0];
    if (has_detal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->detal());
    }

  }
  // repeated .unity.MoveAction move = 3;
  total_size += 1 * this->move_size();
  for (int i = 0; i < this->move_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->move(i));
  }

  // repeated .unity.InstantiateAction instantiate = 4;
  total_size += 1 * this->instantiate_size();
  for (int i = 0; i < this->instantiate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->instantiate(i));
  }

  // repeated .unity.DestroyAction destroy = 5;
  total_size += 1 * this->destroy_size();
  for (int i = 0; i < this->destroy_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->destroy(i));
  }

  // repeated .unity.ScaleAction scale = 6;
  total_size += 1 * this->scale_size();
  for (int i = 0; i < this->scale_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->scale(i));
  }

  // repeated .unity.RorateAction rorate = 7;
  total_size += 1 * this->rorate_size();
  for (int i = 0; i < this->rorate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rorate(i));
  }

  // repeated .unity.PlayAnimAction play_anim = 8;
  total_size += 1 * this->play_anim_size();
  for (int i = 0; i < this->play_anim_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->play_anim(i));
  }

  // repeated .unity.StopAnimAction stop_anim = 9;
  total_size += 1 * this->stop_anim_size();
  for (int i = 0; i < this->stop_anim_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stop_anim(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FRAME::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FRAME* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FRAME*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FRAME::MergeFrom(const FRAME& from) {
  GOOGLE_CHECK_NE(&from, this);
  move_.MergeFrom(from.move_);
  instantiate_.MergeFrom(from.instantiate_);
  destroy_.MergeFrom(from.destroy_);
  scale_.MergeFrom(from.scale_);
  rorate_.MergeFrom(from.rorate_);
  play_anim_.MergeFrom(from.play_anim_);
  stop_anim_.MergeFrom(from.stop_anim_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_frame()) {
      set_frame(from.frame());
    }
    if (from.has_detal()) {
      set_detal(from.detal());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FRAME::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FRAME::CopyFrom(const FRAME& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FRAME::IsInitialized() const {

  return true;
}

void FRAME::Swap(FRAME* other) {
  if (other != this) {
    std::swap(frame_, other->frame_);
    std::swap(detal_, other->detal_);
    move_.Swap(&other->move_);
    instantiate_.Swap(&other->instantiate_);
    destroy_.Swap(&other->destroy_);
    scale_.Swap(&other->scale_);
    rorate_.Swap(&other->rorate_);
    play_anim_.Swap(&other->play_anim_);
    stop_anim_.Swap(&other->stop_anim_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FRAME::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FRAME_descriptor_;
  metadata.reflection = FRAME_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace unity

// @@protoc_insertion_point(global_scope)
